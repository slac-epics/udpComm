20100208 (T.S.)
 - src/padProto.c: let padProtoHandler() ignore requests with
   a command array too small to hold data for the active ('this')
   channel.
20100202 (T.S.)
 - src/udpComm.c: udpCommReturnPacket() failed to set length
   in UDP and IP header. This must be done before reflecting
   the headers so that the IP header checksum is computed
   correctly.
20100125 (T.S.)
 - removed typedef of BpmNumber (-> Bpm app)
 - public declaration of drvPadUdpCommChannelsInUseMask (used
   by Bpm FCOM source).
20100122 (T.S.)
 - configure/CONFIG: only include CONFIG_SITE if present.
20100122 (T.S.)
 - src/drvPadUdpComm.c: replaced strdup() by epicsStrDup().
20100122 (T.S.)
 - src/fidProcess.c: forgot to #define E_MOD1 and E_MOD5.
   Removed unused variable.
20100122 (T.S.)
 - src/padProto.h, src/padProto.c, src/drvPadUdpComm.c,
   src/padProtoHost.c, src/hostStream.c, src/padStream.c:

   **************************************************
   PROTOCOL VERSION CHANGE: PadReply layout modified:
   **************************************************
    - reduced size of 'status' to 8-bits
    - increased timestampHi -> 32-bits
20100122 (T.S.)
 - src/drvPadUdpComm.c:
   PADRPLY_STRM_NSAMPLES macro arg is now pointer to reply.
   (Support for 32-bit stream data.)
 - src/padProto.c: set cmdSize based on actual command (SIM's command
   struct is bigger than previously hardcoded 16 bytes).
 - src/padProto.h:
   PADRPLY_STRM_NSAMPLES macro arg is now pointer to reply.
   (Support for 32-bit stream data.)
 - src/padProtoHost.c:
    o New '-L' option to request 32-bit data streams.
    o Compute nsamples using PADRPLY_STRM_NSAMPLES macro.
    o Let SIM command send values 0xaaaa, 0xbbbb, 0xcccc, 0xdddd.
      (Should have another option to specivy values).
 - src/padStream.c: BUGFIX: must check for 32-bit data flag when
   copying data into lan9118's FIFO.
 - src/padUdpCommSupport.dbd: add driver and registrar for drvPadUdpComm.
20100118 (T.S.)
 - src/Makefile, src/devWfRawSig.c, src/drvPadUdpComm.c, src/drvPadUdpComm.h,
   src/drvPadUdpCommIO.h, src/fidProcess.c, src/fidProcess.h,
   src/padUdpCommSupport.dbd, src/wavBuf.c, src/wavBuf.h:
   unbundled drvPadUdpComm/wavBuf from Bpm IOC application and moved into
   udpComm EPICS module (tag udpComm_post_unbundle_drvPadUdpComm).
 20100118 (T.S.)
 - BUGFIX - src/udpCommBSD.c: make sure udpComm routines don't pass the return
   value of system calls (like 'connect') but the negative 'errno' value.
 20100118 (T.S.)
 - src/sddsrd.c, src/sddsrd.h: added support for 32-bit stream data.
 20100118 (T.S.)
 - src/padStream.c, src/padStream.h:
    o changed semantics of 'start' argument to start_stop_cb(); this
      is now a pointer to the STRM command (start) or NULL (stop).
    o added support for 32-bit stream data.
    o added 'd32' argument to stream 'getdata' callback.
    o let padStreamSim() succeed even if stream is not connected
      provided that 'nosend' option is set.
 20100118 (T.S.)
 - src/padProtoHost.c:
    o updated usage info (-d flag).
    o added 32-bit stream data support.
    o added option to set stream timeout.
 20100118 (T.S.)
 - src/padProto.c:
    o ignore return value of padStreamPet() (PADCMD_SIM command).
 20100118 (T.S.)
 - src/padProto.h: added PADCMD_STRM_FLAG_32 (32-bit stream data).
 20100118 (T.S.)
 - src/hostStream.c:
    o added timeout functionality (stream times out and stops if no
      PET or STRM command is received withing timeout).
    o added support for 32-bit stream data.
    o added padStreamPet().
    o include <padStream.h> to ensure API compatibility.
    o let padStreamSim() succeed even if stream is not connected
      provided that 'nosend' option is set.
 - src/hostStream.h: export/declare padStreamTimeoutSecs;
 20100113 (T.S.)
 - src/padProto.c, src/padStream.c, src/padStream.h:
   moved stream connection state handling into the padStream module and
   added a 'timeout' feature so that a stream that is not 'petted' or
   re-'started' within padStreamTimeoutSecs seconds it is forcefully stopped.
 - src/padStream.c: BUGFIX: ensure proper alignment of 'replyPacket'.
 - src/padStream.c: padStreamStart() resets connection state to 'unconnected'
   if start_stop_callback() returns nonzero and passes this return code
   to caller.
 - src/padStream.c: padStreamStart(), padStreamStop() - moved execution
   of start_stop_callback() into mutex-protected section.
 - src/padStream.c: padStreamStop() - reset/clear connection regardless
   of result returned by start_stop_callback().
 20100112 (T.S.)
 - src/padProto.c: let 'padRequest' use a RBUF instead of our own stack
   memory so that we can use udpCommSendPkt() (avoiding a copy operation).
 - src/udpComm.c, src/udpComm.h, src/udpCommBSD.c:
   CHANGED udpCommConnect() semantics DEVIATING FROM BSD 'connect()'.
   If the peer address is an IPv4 multicast-address then 'udpCommConnect()'
   just 'memorizes' the peer's address/port for sending. However, when
   receiving packets they are *not* filtered against the peer address/port
   (this would never succeed since the sender is never the connected MC
   address).
   Added extra argument to udpSockConnect() allowing the user to choose
   the desired semantics. udpCommConnect() chooses the 'multicast-passthrough'
   option.
 20091215 (T.S.)
 - configure/CONFIG_SITE, src/Makefile: define CROSS_COMPILER_TARGET_ARCHS
   in the former file.
 - configure/RELEASE, src/Makefile: Determine from SDDS_LIB (optionally
   defined by 'configure/RELEASE') variable whether to build with SDDS
   support or without.
 - src/hostStream.h, src/hostStream.c, src/padProtoHost.c: add 'unused'
   arg to padStreamSimulated() so that the declaration matches the (newly
   added) padUdpHandler() callback prototype.
 - src/padProto.c, src/padProto.h: Add 'timeout' and 'poll_cb' arguments
   to padUdpHandler thus omitting a clone in padProtoHost which now can use
   the vanilla version of padUdpHandler().
   'poll_cb()' is executed (if non-NULL) every time there is no padProto
   activity for 'timeout' milli-seconds.
 - src/padProto.c, src/padProto.h: Added 'mcaddr' argument to padUdpHandler().
   If nonzero then the MC address is set on the socket used for communication.
 - src/padProto.h: killed 'alias rule violation' warnings by declaring most
   protocol headers/structs with 'may_alias' attribute.
 - src/padProtoHost.c: Added -m option to let the server listen to a 
   multicast address (server mode only).
   Use padUdpHandler() from library instead of a local, modified copy.
 - src/padStream.c, src/padStream.h: made 'streamSim()' routine public
   as 'padStreamSim_getdata()' -- a callback that may be used with
   padStreamSend.
 - src/udpComm.c: Check for UDPCOMM_ALIGNMENT being satisfied by
   LAN_IP_BASIC_ALIGNMENT.
 - src/udpComm.h: Define UDPCOMM_ALIGNMENT.
 - src/udpCommBSD.c: Use UDPCOMM_ALIGNMENT; LAN_IP_BASIC_ALIGNMENT is not
   available here; however, we check compatibility when building the non-BSD
   variant.
